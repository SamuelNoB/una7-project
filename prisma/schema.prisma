// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 Int  @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int   @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            Int    @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  publications Publication[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Publication {
  id            Int         @id @default(autoincrement())
  active        Boolean     @default(true)
  title         String
  subTitle      String
  coverImage    String      @db.LongText	  // imagem de capa da publicação
  imageType     String      @default("")
  content       String

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now())

  authorId      Int
  author        User        @relation(fields: [authorId], references: [id])

}

model Partner {
  id            Int         @id @default(autoincrement())
  name          String
  link          String
  active        Boolean     @default(true)
  image         String      @db.LongText	// se relaciona com o model File
  imageType     String      @default("")
}

model Client {
  id            Int         @id @default(autoincrement())
  visible       Boolean     @default(true)
  name          String
  clientPhoto   String      @db.LongText
  photoType     String      @default("")
  link          String?
}

model Contact {
  id            Int         @id @default(autoincrement())
  subject       String
  senderName    String
  email         String
  content       String
}
